from turtle import *
from math import *

axis_width=3
ray_width=3
line_width=2
lens_width=3


def x_axis():
    color('black')
    width(axis_width)
    forward(200)
    backward(400)
    up()
    setposition(-150,-15)
    write("Optical Axis")

def y_axis():
    color('black')
    home()
    right(90)
    broken_line('black',50,5)
    penup()
    home()
    left(90)
    broken_line('black',250,5)

def broken_line(color1,length,dl):
    color(color1)
    l=0;
    pendown()
    while l<length :
        forward(dl)
        penup()
        forward(dl)
        pendown()
       # forward(dl)
        l=l+2*dl

def line(l,color1,x,y,theta):
    width(line_width)
    color(color1)
    width(ray_width)
    up()
    setposition(x,y)
    down()
    setheading(theta)
    fd(l)        
    return position()

def rectangle(w,h,color1,fill_color,x,y,theta=0):
    width(line_width)
    color(color1,fill_color)
    up()
    setposition(x,y)
    down()
    begin_fill()
    setheading(theta)
    fd(w)
    left(90)
    fd(h)
    left(90)
    fd(w)
    left(90)
    fd(h)
    end_fill()
    return position()

def ray(l,color1,x,y,theta):
    color(color1)
    width(ray_width)
    arrow_size=ray_width+5
    up()
    setposition(x,y)
    down()
    setheading(theta)
    fd(l/2)        
    left(90+45)
    fd(arrow_size)
    left(180)
    fd(arrow_size)
    right(90)
    fd(arrow_size)
    left(180)
    fd(arrow_size)
    right(45)
    forward(l/2)
    return position()

def concave(r,theta,line_color,fill_color,x=0,y=0):
    width(lens_width)
    color(line_color,fill_color)
    up()
    setposition(x,y)
    setheading(-90)
    fd(r*sin(radians(theta)/2))
    down()
    [xb,yb]=position()
    setheading(90-theta/2)
    circle(r,theta)
    [xt,yt]=position()
    return [xt,yt,xb,yb]

def convex(r,theta,line_color,fill_color,x=0,y=0):
    width(lens_width)
    color(line_color,fill_color)
    up()
    setposition(x,y)
    setheading(90)
    fd(r*sin(radians(theta)/2))
    down()
    [xb,yb]=position()
    setheading(180+90-theta/2)
    circle(r,theta)
    [xt,yt]=position()

def draw_curve(r,theta,line_color,fill_color):
    color(line_color,fill_color)
    up()
    home()
    setheading(-90)
    fd(r*sin(radians(theta)/2))
    down()
    begin_fill()
    setheading(90-theta/2)
    circle(r,theta)
    setheading(-90)
    fd(r*sin(radians(theta/2)))
   # setheading(180+45)
   # circle(r,90)
    end_fill()

def translation():
    #y_axis()
    #draw_ray(209,'red')
    #[x,y]=ray(200,'red',10,12,45)
    x_axis()
    [x,y]=ray(200,'blue',-85,60,30)
    broken_line('blue',55,5)
    line(40,'black',x,y,0)
    write("\u03b81")
    line(40,'black',-85,60,0)
    #write("ppp \u03b8 \u036b \u03b2 \u03b4 t")
    write("\u03b80")
    #ray(200,'blue',x,y,35)
    #draw_lens(80,'black','cyan')
    #draw_curve(80,90,'black','cyan')
    #print(concave(80,50,'black','cyan'))


def reflection():
    x_axis()
    y_axis()
    [x1,y1]=ray(180,'red',-155,60,30)
    [x2,y2]=ray(180,'blue',x1,y1,180-30)
#    broken_line('blue',55,5)
    line(40,'black',x1-40,y1,0)
    up()
    setposition(-30,y1)
    write("\u03b81")
    setposition(-30,y1-15)
    down()
    write("\u03b80")
    #line(40,'black',x2,y2,0)

def refraction():
    x_axis()
    y_axis()
    [x1,y1]=ray(180,'red',-138,60,40)
    [x2,y2]=ray(180,'blue',x1,y1,20)
#    broken_line('blue',55,5)
    line(80,'black',x1-40,y1,0)
    write("\u03b81")
    up()
    setposition(-40,y1-15)
    down()
    write("\u03b80")
    #line(40,'black',x2,y2,0)
    #write("ppp \u03b8 \u036b \u03b2 \u03b4 t")
    #ray(200,'blue',x,y,35)
    #draw_lens(80,'black','cyan')
    #draw_curve(80,90,'black','cyan')
    #print(concave(80,50,'black','cyan'))

def block1():
    x_axis()
   # y_axis()
    [x1,y1]=ray(180,'red',-168,20,40)
    rectangle(180*cos(radians(20)),180,'orange','cyan',x1,y1-50)
    [x2,y2]=ray(180,'blue',x1,y1,20)
    [x3,y3]=ray(180,'green',x2,y2,40)
    line(80,'black',x1-40,y1,0)
    write("\u03b81")
    up()
    setposition(x1-40,y1-15)
    write("\u03b80")
    line(80,'black',x2-40,y2,0)
    write("\u03b82")
    up()
    setposition(x2-40,y2-15)
    write("\u03b83")
    setposition(x1,y1-50)
    setheading(0)
    down()
    #write("ppp \u03b8 \u036b \u03b2 \u03b4 t")
#refraction()
#reflection()
#translation()
block1()
color('red', 'yellow')

color('red', 'yellow')
hideturtle()
done()
